<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:behaviors="clr-namespace:WpfUtils.Behaviors"
	xmlns:controls="clr-namespace:WpfUtils.Controls"
	xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="ToggleButtonStyles.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<Style
		x:Key="WpfUtilsComboBoxButton"
		BasedOn="{StaticResource WpfUtilsIconToggleButton}"
		TargetType="{x:Type ToggleButton}">

		<Setter Property="Margin" Value="0" />
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />

		<Setter Property="ContentTemplate">
			<Setter.Value>
				<DataTemplate>
					<Grid Margin="0,0,3,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<ContentPresenter
							Name="contentPresenter"
							Margin="3,0"
							Content="{TemplateBinding Content}"
							ContentStringFormat="{TemplateBinding ContentStringFormat}"
							ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
							IsHitTestVisible="False" />

						<Path
							Grid.Column="1"
							Margin="3"
							HorizontalAlignment="Center"
							VerticalAlignment="Center"
							Data="M 0,0 5,3 10,0"
							Stroke="{DynamicResource ForegroundLightBrush}"
							StrokeThickness="1" />

					</Grid>
				</DataTemplate>
			</Setter.Value>
		</Setter>

	</Style>



	<ControlTemplate
		x:Key="wpfUtilsComboBoxTemplate"
		TargetType="{x:Type ComboBox}">

		<Grid>
			<ToggleButton
				Name="toggleButton"
				HorizontalContentAlignment="Stretch"
				Background="{TemplateBinding Background}"
				Foreground="{TemplateBinding Foreground}"
				IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
				Style="{StaticResource WpfUtilsComboBoxButton}">

				<ContentPresenter
					Name="contentPresenter"
					Margin="{TemplateBinding Padding}"
					Content="{TemplateBinding SelectionBoxItem}"
					ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
					ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
					ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
					IsHitTestVisible="False" />

			</ToggleButton>

			<controls:PopOut
				x:Name="PART_Popup"
				Grid.Column="0"
				MinWidth="100"
				MaxWidth="400"
				MaxHeight="{TemplateBinding MaxDropDownHeight}"
				Background="{DynamicResource ControlBackgroundBrush}"
				Header="{TemplateBinding controls:PopOut.Header}"
				HeaderTemplate="{TemplateBinding controls:PopOut.HeaderTemplate}"
				IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
				PlacementTarget="{Binding ElementName=toggleButton}"
				Style="{DynamicResource WpfUtilsPopOut}">

				<ScrollViewer behaviors:SmoothScrollBehavior.SmoothScroll="True">
					<ItemsPresenter
						Name="ItemsPresenter"
						KeyboardNavigation.DirectionalNavigation="Contained" />
				</ScrollViewer>
			</controls:PopOut>
		</Grid>

		<ControlTemplate.Triggers>
			<Trigger Property="IsDropDownOpen" Value="True">
				<Setter TargetName="toggleButton" Property="IsHitTestVisible" Value="False" />
			</Trigger>
		</ControlTemplate.Triggers>

	</ControlTemplate>

	<Style
		x:Key="WpfUtilsComboBoxItem"
		TargetType="{x:Type ComboBoxItem}">

		<Setter Property="FocusVisualStyle" Value="{DynamicResource WpfUtilsFocusVisualStyle}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ForegroundLightBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource ForegroundLightBrush}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Grid
						Margin="0"
						Background="Transparent">

						<Border
							x:Name="HoverBorder"
							Margin="1"
							Opacity="0"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							Style="{DynamicResource WpfUtilsControlHoverBorder}" />

						<Border
							x:Name="SelectionBorder"
							Opacity="0"
							Style="{DynamicResource WpfUtilsSelectedBorder}" />

						<ContentPresenter
							Margin="10,4,4,4"
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}" />
					</Grid>

					<ControlTemplate.Triggers>

						<Trigger Property="IsSelected" Value="True">
							<Setter Property="TextBlock.Foreground" Value="{DynamicResource ControlForegroundHighlightBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource ControlForegroundHighlightBrush}" />
						</Trigger>

						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="HoverBorder"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0:00:00.150">
											<DoubleAnimation.EasingFunction>
												<SineEase EasingMode="EaseOut" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="HoverBorder"
											Storyboard.TargetProperty="Opacity"
											To="0"
											Duration="0:00:00.250">
											<DoubleAnimation.EasingFunction>
												<SineEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="SelectionBorder" Property="Opacity" Value="1" />
						</Trigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="WpfUtilsComboBox"
		TargetType="{x:Type ComboBox}">
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
		<Setter Property="Template" Value="{StaticResource wpfUtilsComboBoxTemplate}" />
		<Setter Property="Padding" Value="3,0" />
		<Setter Property="Margin" Value="1" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource WpfUtilsComboBoxItem}" />
		<Setter Property="FocusVisualStyle" Value="{DynamicResource WpfUtilsFocusVisualStyle}" />
	</Style>

	<Style
		x:Key="WpfUtilsComboBoxNoBorder"
		BasedOn="{StaticResource WpfUtilsComboBox}"
		TargetType="{x:Type ComboBox}">
		<Setter Property="Background" Value="Transparent" />
	</Style>

</ResourceDictionary>