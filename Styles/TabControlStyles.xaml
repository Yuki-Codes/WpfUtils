<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:converters="clr-namespace:WpfUtils.Converters"
	xmlns:wpfUtils="clr-namespace:WpfUtils.Controls">

	<ControlTemplate
		x:Key="WpfUtilsTabHighlightTemplate"
		TargetType="{x:Type wpfUtils:RadioButtonHighlighter}">
		<Grid>

			<Grid
				x:Name="PART_Highlight"
				IsHitTestVisible="False">
				<Border
					Margin="1,1,1,-10"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					Background="{DynamicResource BackgroundBrush}"
					CornerRadius="4,4,0,0"
					SnapsToDevicePixels="True" />
			</Grid>
			<ContentPresenter />
		</Grid>
	</ControlTemplate>

	<ControlTemplate
		x:Key="WpfUtilsVerticalTabHighlightTemplate"
		TargetType="{x:Type wpfUtils:RadioButtonHighlighter}">
		<Grid>

			<Grid
				x:Name="PART_Highlight"
				IsHitTestVisible="False">
				<Border
					Margin="1,1,-10,1"
					HorizontalAlignment="Stretch"
					VerticalAlignment="Stretch"
					Background="{DynamicResource BackgroundBrush}"
					CornerRadius="4,0,0,4"
					SnapsToDevicePixels="True" />
			</Grid>
			<ContentPresenter />
		</Grid>
	</ControlTemplate>

	<Style
		x:Key="WpfUtilsTabControl"
		TargetType="{x:Type TabControl}">
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
		<Setter Property="Padding" Value="3" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Border
						Background="{TemplateBinding Background}"
						Style="{DynamicResource WpfUtilsControlBorder}">
						<Grid
							ClipToBounds="True"
							KeyboardNavigation.TabNavigation="Local"
							SnapsToDevicePixels="True">

							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition />
							</Grid.RowDefinitions>

							<wpfUtils:RadioButtonHighlighter Template="{StaticResource WpfUtilsTabHighlightTemplate}">
								<UniformGrid
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									IsItemsHost="True"
									KeyboardNavigation.TabIndex="1"
									Rows="1" />
							</wpfUtils:RadioButtonHighlighter>

							<Border
								Grid.Row="1"
								Margin="2,0,2,2"
								Background="{DynamicResource BackgroundBrush}"
								CornerRadius="4">

								<Grid
									Name="ContentPanel"
									Margin="{TemplateBinding Padding}"
									KeyboardNavigation.DirectionalNavigation="Contained"
									KeyboardNavigation.TabIndex="2"
									KeyboardNavigation.TabNavigation="Local">

									<ContentPresenter
										Name="PART_SelectedContentHost"
										Margin="{TemplateBinding Padding}"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										Content="{TemplateBinding SelectedContent}"
										ContentSource="SelectedContent"
										ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
										ContentTemplate="{TemplateBinding SelectedContentTemplate}"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />

								</Grid>
							</Border>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="TabItem">
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="VerticalContentAlignment" Value="Stretch" />
					<Setter Property="HorizontalContentAlignment" Value="Stretch" />
					<Setter Property="Foreground" Value="{DynamicResource ForegroundLightBrush}" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TabItem}">
								<RadioButton
									wpfUtils:RadioButtonHighlighter.UseGroupHighlight="True"
									Background="Transparent"
									Content="{TemplateBinding Header}"
									ContentTemplate="{TemplateBinding HeaderTemplate}"
									IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}"
									IsEnabled="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=TabItem}}"
									Style="{DynamicResource WpfUtilsRadioButtonNoHighlight}" />

								<ControlTemplate.Triggers>
									<Trigger Property="IsSelected" Value="True">
										<Setter Property="IsHitTestVisible" Value="False" />
									</Trigger>
								</ControlTemplate.Triggers>

							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
	</Style>



	<Style
		x:Key="WpfUtilsSideTabs"
		TargetType="TabControl">
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Padding" Value="3" />
		<Setter Property="VerticalContentAlignment" Value="Top" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Border
						Grid.Column="0"
						Background="{TemplateBinding Background}"
						Style="{DynamicResource WpfUtilsControlBorder}">
						<Grid
							ClipToBounds="False"
							KeyboardNavigation.TabNavigation="Local"
							SnapsToDevicePixels="True">

							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>

							<wpfUtils:RadioButtonHighlighter
								Orientation="Vertical"
								Template="{StaticResource WpfUtilsVerticalTabHighlightTemplate}">
								<UniformGrid
									Margin="0"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
									Columns="1"
									IsItemsHost="True"
									KeyboardNavigation.TabIndex="1" />
							</wpfUtils:RadioButtonHighlighter>


							<Grid
								Name="ContentPanel"
								Grid.Column="1"
								KeyboardNavigation.DirectionalNavigation="Contained"
								KeyboardNavigation.TabIndex="2"
								KeyboardNavigation.TabNavigation="Local">

								<Border
									Grid.Row="1"
									Margin="0,2,2,2"
									Background="{DynamicResource BackgroundBrush}"
									CornerRadius="4">

									<ContentPresenter
										Name="PART_SelectedContentHost"
										Margin="{TemplateBinding Padding}"
										HorizontalAlignment="Stretch"
										VerticalAlignment="Stretch"
										Content="{TemplateBinding SelectedContent}"
										ContentSource="SelectedContent"
										ContentStringFormat="{TemplateBinding SelectedContentStringFormat}"
										ContentTemplate="{TemplateBinding SelectedContentTemplate}"
										SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
								</Border>

							</Grid>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="TabItem">
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="VerticalContentAlignment" Value="Stretch" />
					<Setter Property="HorizontalContentAlignment" Value="Stretch" />
					<Setter Property="Foreground" Value="{DynamicResource ForegroundLightBrush}" />
					<Setter Property="Margin" Value="0" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type TabItem}">
								<RadioButton
									Height="Auto"
									wpfUtils:RadioButtonHighlighter.UseGroupHighlight="True"
									Background="Transparent"
									Content="{TemplateBinding Header}"
									ContentTemplate="{TemplateBinding HeaderTemplate}"
									IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=TabItem}}"
									IsEnabled="{Binding IsEnabled, RelativeSource={RelativeSource AncestorType=TabItem}}"
									Style="{DynamicResource WpfUtilsRadioButtonNoHighlight}" />

								<ControlTemplate.Triggers>
									<Trigger Property="IsSelected" Value="True">
										<Setter Property="IsHitTestVisible" Value="False" />
									</Trigger>
								</ControlTemplate.Triggers>

							</ControlTemplate>
						</Setter.Value>
					</Setter>

					<Style.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource TrimBrush}" />
						</Trigger>
					</Style.Triggers>

				</Style>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>