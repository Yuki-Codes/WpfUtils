<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:behaviours="clr-namespace:WpfUtils.Behaviours"
	xmlns:controls="clr-namespace:WpfUtils.Controls"
	xmlns:wpf="http://materialdesigninxaml.net/winfx/xaml/themes">

	<Style
		x:Key="WpfUtilsSwitchSelectorItemStyle"
		TargetType="{x:Type ListBoxItem}">

		<Setter Property="Margin" Value="0" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="6,0" />

		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ForegroundLightBrush}" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">

					<RadioButton
						x:Name="Button"
						Height="Auto"
						Margin="0"
						Padding="{TemplateBinding Padding}"
						HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
						controls:RadioButtonHighlighter.UseGroupHighlight="True"
						Background="Transparent"
						IsChecked="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}"
						IsEnabled="{TemplateBinding IsEnabled}"
						Style="{DynamicResource WpfUtilsRadioButtonNoHighlight}">

						<ContentPresenter
							x:Name="Content"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />

					</RadioButton>

					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="IsHitTestVisible" Value="False" />
						</Trigger>
					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="TextBlock.Foreground" Value="{DynamicResource TrimBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style
		x:Key="WpfUtilsSwitchSelectorNoBorder"
		TargetType="{x:Type ListBox}">

		<Setter Property="Height" Value="26" />
		<Setter Property="Margin" Value="1" />
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
		<Setter Property="Padding" Value="0" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<controls:RadioButtonHighlighter>
						<ItemsPresenter
							Margin="{TemplateBinding Padding}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</controls:RadioButtonHighlighter>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<UniformGrid Rows="1" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="ItemContainerStyle" Value="{DynamicResource WpfUtilsSwitchSelectorItemStyle}" />
	</Style>

	<Style
		x:Key="WpfUtilsSwitchSelector"
		BasedOn="{StaticResource WpfUtilsSwitchSelectorNoBorder}"
		TargetType="{x:Type ListBox}">

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border
						Background="{TemplateBinding Background}"
						Style="{DynamicResource WpfUtilsControlBorder}">
						<controls:RadioButtonHighlighter>
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</controls:RadioButtonHighlighter>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="WpfUtilsSwitchSelectorVertical"
		BasedOn="{StaticResource WpfUtilsSwitchSelector}"
		TargetType="{x:Type ListBox}">

		<Setter Property="Height" Value="Auto" />


		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border
						Background="{TemplateBinding Background}"
						Style="{DynamicResource WpfUtilsControlBorder}">
						<controls:RadioButtonHighlighter Orientation="Vertical">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</controls:RadioButtonHighlighter>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style
					BasedOn="{StaticResource WpfUtilsSwitchSelectorItemStyle}"
					TargetType="{x:Type ListBoxItem}">
					<Setter Property="HorizontalContentAlignment" Value="stretch" />
				</Style>
			</Setter.Value>
		</Setter>

	</Style>

	<Style
		x:Key="WpfUtilsListBoxItem"
		TargetType="{x:Type ListBoxItem}">


		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Padding" Value="2" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">

					<Border
						Margin="{TemplateBinding Margin}"
						Background="Transparent"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						ClipToBounds="{TemplateBinding ClipToBounds}">
						<Grid>

							<Border
								x:Name="HoverBorder"
								Margin="1"
								Opacity="0"
								Style="{DynamicResource WpfUtilsControlHoverBorder}" />

							<Border
								x:Name="SelectionBorder"
								Margin="1"
								Opacity="0"
								Style="{DynamicResource WpfUtilsSelectedBorder}" />

							<ContentPresenter
								Margin="{TemplateBinding Padding}"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
								Focusable="False"
								RecognizesAccessKey="False"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Grid>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" Value="0.5" />
						</Trigger>

						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="TextBlock.Foreground" Value="{DynamicResource ControlForegroundHighlightBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource ControlForegroundHighlightBrush}" />

							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="HoverBorder"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0:0:0.100" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>

							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="HoverBorder"
											Storyboard.TargetProperty="Opacity"
											From="1"
											To="0"
											Duration="0:0:0.250" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>

						<Trigger Property="IsSelected" Value="True">

							<Setter Property="TextBlock.Foreground" Value="{DynamicResource ControlForegroundHighlightBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource ControlForegroundHighlightBrush}" />

							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="SelectionBorder"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0:0:0.100" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>

							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="SelectionBorder"
											Storyboard.TargetProperty="Opacity"
											To="0"
											Duration="0:0:0.250" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>


					</ControlTemplate.Triggers>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="WpfUtilsListBox"
		TargetType="{x:Type ListBox}">
		<Setter Property="ItemContainerStyle" Value="{DynamicResource WpfUtilsListBoxItem}" />
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalOnly" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel" />
		<Setter Property="VirtualizingPanel.IsVirtualizing" Value="True" />

		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<controls:SmoothScrollVirtualizingStackPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border
						Name="Bd"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="true"
						Style="{DynamicResource WpfUtilsControlBorder}">
						<ScrollViewer
							Padding="{TemplateBinding Padding}"
							Background="{DynamicResource BackgroundBrush}"
							Focusable="false"
							HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
							VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</Border>

				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>